#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <iostream>
using namespace std;

char P[10000];
int line = 1;
int l[100];
int m = 0;
const char *key[11] = { "void","int","float", "char", "if", "else", "while", "do", "for", "return", "main" };
int num[11] = { 3,4,5,6,7,8,9,10,11,12,13 };

int Key(char str[]) {
	int i;
	for (i = 0; i < 11; i++) 
	{
		if (strcmp(str, key[i]) == 0) 
		{
			return num[i];
		}
	}
	return 0;
}

int judgeword(char c) {
	if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'))
		return 1;
	else
		return 0;
}

int judgenum(char c) {
	if (c >= '0' && c <= '9')
		return 1;
	else
		return 0;
}

void Form() {
	int n;
	char x;
	int i = 0;
	int j = 0;
	char str[100];
	while ((x = P[j]) != '#') 
	{
		if (x == ' ' || x == '\t') 
		{
			j++;
		}
		else if (x == '\n') 
		{
			if (j != 0 && P[j - 1] != '\n') 
			{
				printf("\n");
				line++;
			}
			j++;
		}
		else if (x == '/' && P[j + 1] == '/') 
		{
			do
			{
				j++;
			} while (P[j] != '\n');
		}
		else if (x == '/'&&P[j + 1] == '*') 
		{
			do 
			{
				j++;
			} while (P[j - 1] != '/' || P[j - 2] != '*');
			if (P[j] == ' ') 
			{
				do 
				{
					j++;
				} while (P[j] == ' ');
			}
			if (P[j] == '\n') 
			{
				j++;
			}
		}
		else if (judgenum(x) == 1) 
		{
			while (judgenum(x))
			{
				str[i] = x;
				i++;
				j++;
				x = P[j];
			}
			if (judgeword(x) == 1) 
			{
				l[m] = line;
				m++;
				printf("LexicalError,");
				j++;
				x = P[j];
				while (judgeword(x) == 1 || judgenum(x) == 1)
				{
					j++;
					x = P[j];
				}
				i--;
			}
			else 
			{
				str[i] = '\0';
				printf("<2,");
				printf("%s", str);
				printf(">,");
			}
		}
		else if (judgeword(x)) 
		{
			i = 0;
			while (judgeword(x) || judgenum(x)) 
			{
				str[i] = x;
				i++;
				j++;
				x = P[j];
			}
			str[i] = '\0';
			i = 0;
			n = Key(str);
			if (n != 0) 
			{
				printf("<");
				printf("%d", n);
				printf(",->,");
			}
			else 
			{

				printf("<1,%s>,", str);
			}
		}
		else if (P[j + 1] == '=') 
		{
			if (x == '<') 
			{
				printf("<20,->,");
				j += 2;
			}
			else if (x == '>') 
			{
				printf("<22,->,");
				j += 2;
			}
			else if (x == '=') 
			{
				printf("<23,->,");
				j += 2;
			}
			else if (x == '!') 
			{
				printf("<24,->,");
				j += 2;
			}
		}
		else if (x == '&'&&P[j + 1] == '&') 
		{
			printf("<25,->,");
			j += 2;
		}
		else if (x == '|'&&P[j + 1] == '|')
		{
			printf("<26,->,");
			j += 2;
		}
		else {
			switch (x) {
			case '+':
				printf("<14,->,");
				break;
			case '-':
				printf("<15,->,");
				break;
			case '*':
				printf("<16,->,");
				break;
			case '/':
				printf("<17,->,");
				break;
			case '%':
				printf("<18,->,");
				break;
			case '<':
				printf("<19,->,");
				break;
			case '>':
				printf("<21,->,");
				break;
			case '=':
				printf("<27,->,");
				break;
			case '(':
				printf("<28,->,");
				break;
			case ')':
				printf("<29,->,");
				break;
			case '[':
				printf("<30,->,");
				break;
			case ']':
				printf("<31,->,");
				break;
			case '{':
				printf("<32,->,");
				break;
			case '}':
				printf("<33,->,");
				break;
			case ';':
				printf("<34,->,");
				break;
			case ',':
				printf("<35,->,");
				break;
			}
			j++;
		}
	}
}

int main() {
	int k = 0;
	do {
		P[k] = getchar();
		k++;
	} while (P[k - 1] != '#');
	Form();
	if (m != 0) {
		printf("LexicalError(s) on line(s) ");
		for (int i = 0; i < m; i++) {
			printf("%d,", l[i]);
		}
	}
	system("pause");
	return 0;
}
